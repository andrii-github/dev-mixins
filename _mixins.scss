@import "functions";

// MIXINS FOR POSITION
// MIXINS FOR SIZE
// MIXIN FOR MARGIN
// MIXIN FOR PADDING
// PADDINGS AND MARGIN RESET
// CLEARFIX
// PADDINGS AND MARGIN RESET



//*********************
// MIXINS FOR POSITION
//*********************


//************ bourbon mixin position
// div{
//  @include absolute(0 0 0 0);
//}
// css:
//div{
//  position: absolute;
//  top: 0;
//  right: 0;
//  bottom: 0;
//  left: 0;
//}

// div{
//  @include absolute(0 null auto null);
//}
// css:
//div{
//  position: absolute;
//  top: 0;
//  bottom: auto;
//}

@mixin absolute($sides: null null null null) {
  position: absolute;
  $exact-size: (
          top:    nth($sides, 1),
          right:  nth($sides, 2),
          bottom: nth($sides, 3),
          left:   nth($sides, 4)
  );
  @each $side, $value in $exact-size {
    @if is-length($value) {
      #{$side}: $value;
    }
  }
}

//************ mixin absolute top left
//
//div{
//  @include absolute-tl();
//}
// css:
//div{
//  position: absolute;
//  top: 0;
//  left: 0;
//}
//
//div{
//  @include absolute-tl(10px, 20px);
//}
// css:
//div{
//  position: absolute;
//  top: 10px;
//  left: 20px;
//}

@mixin absolute-tl($top:0, $left:0){
  position: absolute;
  top: $top;
  left: $left;
}

//************ mixin absolute bottom right
//
//div{
//  @include absolute-br();
//}
// css:
//div{
//  position: absolute;
//  bottom: 0;
//  right: 0;
//}
//
//div{
//  @include absolute-br(10px, 20px);
//}
// css:
//div{
//  position: absolute;
//  bottom: 10px;
//  right: 20px;
//}

@mixin absolute-br($bottom:0, $right:0){
  position: absolute;
  bottom: $bottom;
  right: $right;
}


//*********************
// MIXINS FOR SIZE
//*********************

//************ mixin size
// bourbon mixin
//
// div{
//  @include size(100%);
//}
// css:
//div{
//  width: 100%;
//  height: 100%;
//}
// div{
//  @include size(200px 100px );
//}
// css:
//div{
//  width: 200px;
//  height: 100px;
//}

@mixin size($value) {
  $width: nth($value, 1);
  $height: $width;

  @if length($value) > 1 {
    $height: nth($value, 2);
  }

  @if is-size($height) {
    height: $height;
  } @else {
    @warn "`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.";
  }

  @if is-size($width) {
    width: $width;
  } @else {
    @warn "`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.";
  }
}

//************ mixin square size with variables
//
//div {
//  @include square();
//}
// css:
//div{
//  width: 100%;
//  height: 100%;
//}
// div{
//  @include size(200px);
//}
// css:
//div{
//  width: 200px;
//  height: 200px;
//}

@mixin square($size:100%){
  width: $size;
  height: $size;
}

//*********************
// MIXIN FOR MARGIN
//*********************

//
//************ mixin margin
//

@mixin m($margins: null null null null) {
  $exact-margin: (
          margin-top:    nth($margins, 1),
          margin-right:  nth($margins, 2),
          margin-bottom: nth($margins, 3),
          margin-left:   nth($margins, 4)
  );
  @each $margin, $value in $exact-margin {
    @if is-length($value) {
      #{$margin}: $value;
    }
  }
}

//div {
//  @include m(0 null null null);
//}
// css:
//div{
//  margin-top: 0;
//}


//*********************
// MIXIN FOR PADDING
//*********************

//
//************ mixin padding
//

@mixin p($paddings: null null null null) {
  $exact-padding: (
          padding-top:    nth($paddings, 1),
          padding-right:  nth($paddings, 2),
          padding-bottom: nth($paddings, 3),
          padding-left:   nth($paddings, 4)
  );
  @each $padding, $value in $exact-padding{
    @if is-length($value) {
      #{$padding}: $value;
    }
  }
}

//div {
//  @include p(0 null null null);
//}
// css:
//div{
//  padding-top: 0;
//}

//*********************
// PADDINGS AND MARGIN RESET
//*********************

@mixin size-reset($margin: 0, $padding: 0){
  margin: $margin;
  padding: $padding;
}

//div {
//  @include size-rest();
//}
//
// css:
//div{
//  margin: 0;
//  padding: 0;
//}

//*********************
// CLEARFIX
//*********************

@mixin cl{
  &:after{
    content: '';
    display: block;
    clear: both;
  }
}

// div{
//   @include cl;
// }
// css:
//  div:after{
//    content: '';
//    display: block;
//    clear: both;
//  }

//*********************
// MIXIN DISPLAY INLINE WITHOUT SPACES
//*********************

@mixin inline($font-size){
  list-style-type: none;
  font-size: 0;

  li{
    display: inline;
    font-size: $font-size;
  }
}

// ul{
//   @include inline(1em);
// }
// css:
// ul{
//    list-style-type: none;
//    font-size: 0;
// }
// ul li{
//    display: inline;
//    font-size: 14px;
// }
